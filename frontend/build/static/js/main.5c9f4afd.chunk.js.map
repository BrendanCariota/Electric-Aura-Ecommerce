{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userContants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Loader.js","components/Message.js","components/Meta.js","actions/productActions.js","screens/ProductScreen.js","components/Product.js","components/Paginate.js","components/ProductCarousel.js","screens/HomeScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Loader","Spinner","animation","role","width","height","marign","display","Message","children","Alert","Meta","description","keywords","Helmet","content","listProducts","pageNumber","listProductDetails","ProductScreen","match","qty","setQty","rating","setRating","comment","setComment","errorProductReview","successProductReview","useEffect","alert","params","md","Image","src","image","alt","fluid","ListGroup","numReviews","price","Card","countInStock","as","Array","keys","disabled","length","review","createdAt","substring","_id","productId","post","Group","controlId","Label","row","Product","Img","Body","Title","Text","Paginate","Pagination","active","ProductCarousel","Carousel","pause","Caption","HomeScreen","sm","lg","xl","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","varaint","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSDKReady","successPay","loadingPay","successDeliver","loadingDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","successCreate","loadingCreate","errorCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","updateLoading","updateError","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5c9f4afd.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\n// REDUCERS\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\n// Creates variable to add to our initial state\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : {}\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage, paymentMethod: paymentMethodFromStorage},\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import { \r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL, \r\n    PRODUCT_DETAILS_REQUEST, \r\n    PRODUCT_DETAILS_SUCCESS, \r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_TOP_FAIL, \r\n    PRODUCT_TOP_REQUEST, \r\n    PRODUCT_TOP_SUCCESS, \r\n    PRODUCT_UPDATE_FAIL, \r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_UPDATE_SUCCESS\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST :\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                products: action.payload.products, \r\n                pages: action.payload.pages, \r\n                page: action.payload.page \r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST :\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST :\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST :\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload}\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST :\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload}\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return ({ product: {} })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST :\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST :\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            // If the state.cartItems product is equal to our payloads product it exists\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            // If that item already exists in our cart return state and map through cartItems\r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    // Maps through current cartItems in state if one matchs just return it because it already \r\n                    // in the cart if it doesn't return the payload(item)\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                // Item (payload) does not exist in state return state items and the payload\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n            case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET\r\n} from '../constants/userContants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST :\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST :\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST :\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST :\r\n            return { ...state, loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return null\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST :\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST :\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST :\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                 user: {},\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_RESET, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_RESET, ORDER_PAY_SUCCESS, ORDER_DELIVER_RESET} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {}}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return { order: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control \r\n                type='text' \r\n                name='q' \r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                placeholder='Search Products...'\r\n                className='mr-sm-2 ml-sm-5'>\r\n            </Form.Control>            \r\n            <Button type='submit' variant= 'outline-success' className='p-2'>\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport { \r\n    USER_DETAILS_FAIL, \r\n    USER_DETAILS_REQUEST, \r\n    USER_DETAILS_SUCCESS, \r\n    USER_DETAILS_RESET,\r\n    USER_LOGIN_FAIL, \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGOUT, \r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS, \r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST, \r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL\r\n} from \"../constants/userContants\"\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\n// We want a login action that is going to make a request to login and get the token\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        // This will set the userInfo in our local storage when there is a successful login\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users', { name, email, password}, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        // This is automatically login in users once they've successfully registered\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        // This will set the userInfo in our local storage when there is a successful login\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {userLogin: { userInfo } } = getState() // Destructures so we can easily access our userInfo and token\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}` // Pass the token for authentication purposes\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {userLogin: { userInfo } } = getState() // Destructures so we can easily access our userInfo and token\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}` // Pass the token for authentication purposes\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config) // Second parameter users is what we want to update with\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {userLogin: { userInfo } } = getState() // Destructures so we can easily access our userInfo and token\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}` // Pass the token for authentication purposes\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config) // Second parameter users is what we want to update with\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {userLogin: { userInfo } } = getState() // Destructures so we can easily access our userInfo and token\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}` // Pass the token for authentication purposes\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config) // Second parameter users is what we want to update with\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {userLogin: { userInfo } } = getState() // Destructures so we can easily access our userInfo and token\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}` // Pass the token for authentication purposes\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config) // Second parameter users is what we want to update with\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data }) // Pass 'data' which is our updated user to details success so our details will update when we update the user on the admin side\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                <LinkContainer to='/'>\r\n                    <Navbar.Brand>Electric Aura</Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    {/* We need to do this because when we embed it we don't have direct access to history anymore*/}\r\n                    <Route render={({ history }) => <SearchBox history={history} />} />\r\n                    <Nav className=\"ml-auto\">\r\n                    <LinkContainer to='/cart'>\r\n                        <Nav.Link><i className='fas fa-shopping-cart'></i> Cart</Nav.Link>\r\n                    </LinkContainer>\r\n                    { userInfo ? (\r\n                        <NavDropdown title={userInfo.name} id='username'>\r\n                            <LinkContainer to='/profile'>\r\n                                <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    ) : \r\n                        <LinkContainer to='/login'>\r\n                            <Nav.Link><i className='fas fa-user'></i> Sign In</Nav.Link>\r\n                        </LinkContainer>\r\n                    }\r\n                    {userInfo && userInfo.isAdmin && ( // This will show admin dropdown if user is an admin\r\n                        <NavDropdown title='Admin' id='adminMenu'>\r\n                        <LinkContainer to='/admin/userlist'>\r\n                            <NavDropdown.Item>Users</NavDropdown.Item>\r\n                        </LinkContainer>\r\n                        <LinkContainer to='/admin/productlist'>\r\n                            <NavDropdown.Item>Products</NavDropdown.Item>\r\n                        </LinkContainer>\r\n                        <LinkContainer to='/admin/orderlist'>\r\n                            <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                        </LinkContainer>\r\n                        </NavDropdown>\r\n                    )}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copryright &copy; Electric Aura\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i  style={{color}}\r\n                    className={\r\n                    value >= 1 \r\n                    ? 'fas fa-star' \r\n                    : value >= 0.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i  style={{color}}\r\n                    className={\r\n                    value >= 2 \r\n                    ? 'fas fa-star' \r\n                    : value >= 1.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i  style={{color}}\r\n                    className={\r\n                    value >= 3\r\n                    ? 'fas fa-star' \r\n                    : value >= 2.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i  style={{color}}\r\n                    className={\r\n                    value >= 4 \r\n                    ? 'fas fa-star' \r\n                    : value >= 3.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i  style={{color}}\r\n                    className={\r\n                    value >= 5 \r\n                    ? 'fas fa-star' \r\n                    : value >= 4.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Sets the default of our props we pass in\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\n// Type check our props to make sure they are the right type\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation='border' role='status' style={{ \r\n            width: '100px', \r\n            height: '100px', \r\n            marign: 'auto', \r\n            display: 'block'\r\n        }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description} />\r\n            <meta name='keywords' content={keywords} />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To Electric Aura',\r\n    keywords: 'nails, nail art, press ons',\r\n    description: 'We sell the best products'\r\n}\r\n\r\nexport default Meta\r\n","import axios from 'axios'\r\nimport { \r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL, \r\n    PRODUCT_DETAILS_REQUEST, \r\n    PRODUCT_DETAILS_SUCCESS, \r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_TOP_FAIL, \r\n    PRODUCT_TOP_REQUEST, \r\n    PRODUCT_TOP_SUCCESS, \r\n    PRODUCT_UPDATE_FAIL, \r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {userLogin: { userInfo } } = getState() // Destructures so we can easily access our userInfo and token\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}` // Pass the token for authentication purposes\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config) // Second parameter users is what we want to update with\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {userLogin: { userInfo } } = getState() // Destructures so we can easily access our userInfo and token\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}` // Pass the token for authentication purposes\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config) // Second parameter users is what we want to update with\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data // Send our newly created product (In this case it's just a generic sample product)\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {userLogin: { userInfo } } = getState() // Destructures so we can easily access our userInfo and token\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}` // Pass the token for authentication purposes\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config) // Second parameter users is what we want to update with\r\n\r\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {userLogin: { userInfo } } = getState() // Destructures so we can easily access our userInfo and token\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}` // Pass the token for authentication purposes\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config) // Second parameter users is what we want to update with\r\n\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React, { useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { error: errorProductReview, success: successProductReview } = productReviewCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(successProductReview) {\r\n            alert('Review Submitted!')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to=\"/\">Go Back</Link> \r\n            { loading ? \r\n                <Loader/> : \r\n                error ? <Message variant='danger'>{error}</Message> :\r\n                <>\r\n                <Meta title={product.name} />\r\n                <Row>\r\n                <Col md={6}>\r\n                    <Image src={product.image} alt={product.name} fluid />\r\n                </Col>\r\n                <Col md={3}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            Price: ${product.price}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            Description: {product.description}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Price:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <strong>${product.price}</strong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Status:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {/* QTY Picking Functionality */}\r\n                            {product.countInStock > 0 && (\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Qty</Col>\r\n                                        <Col>\r\n                                            <Form.Control \r\n                                                as='select' \r\n                                                value={qty} \r\n                                                onChange={(e) => {setQty(e.target.value)}} \r\n                                            >\r\n                                                {/* [0,1,2,3,4] */}\r\n                                                {\r\n                                                    [...Array(product.countInStock).keys()].map(x => (\r\n                                                        <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                    ))\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                onClick={addToCartHandler}\r\n                                className='btn-block' \r\n                                type='button'\r\n                                disabled={product.countInStock === 0}>\r\n                                    Add to Cart\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <h2>Reviews</h2>\r\n                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                        {product.reviews.length === 0 && <Message>No Reviews</Message> }\r\n                        <ListGroup variant='flush'>\r\n                            {product.reviews.map(review => (\r\n                                <ListGroup.Item key={review._id}>\r\n                                    <strong>{review.name}</strong>\r\n                                    <Rating value={review.rating} />\r\n                                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                                    <p>{review.comment}</p>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                            <ListGroup.Item>\r\n                                <h2>Write a Customer Review</h2>\r\n                                {userInfo ? (\r\n                                    <Form onSubmit={submitHandler}>\r\n                                        <Form.Group controlId='rating'>\r\n                                            <Form.Label>Rating</Form.Label>\r\n                                            <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Poor</option>\r\n                                                <option value='2'>2 - Fair</option>\r\n                                                <option value='3'>3 - Good</option>\r\n                                                <option value='4'>4 - Very Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId='comment'>\r\n                                            <Form.Label>Comment</Form.Label>\r\n                                            <Form.Control as='textarea' row='3' value={comment} onChange={(e) => setComment(e.target.value)}></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Button type='submit' variant='primary'>Submit</Button>\r\n                                    </Form>\r\n                                ) : <Message>Please <Link to='/login'>sign in</Link> to write a review</Message>}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n                </>\r\n                }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant=\"top\" />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = ''}) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {/* This will map through whatever the number of pages is */}\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer\r\n                    key={x + 1} \r\n                    to={!isAdmin ? keyword ? `/search/${keyword}/page/${x+1}` \r\n                    : `/page/${x+1}` : `/admin/productlist/${x+1}`}\r\n                >\r\n                    <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))} \r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n    : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carsousel-caption'>\r\n                            <h2>{product.name} (${product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    // Check for the keyword in the SearchBox component\r\n    const keyword = match.params.keyword\r\n\r\n    // We will get our pageNumber from URL parameters like our keyword for searching\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // This var should match what you called it in (store.js)\r\n    const productList = useSelector(state => state.productList)\r\n    // We destructure and pull these from that productList state\r\n    const { loading, error, products, page, pages} = productList\r\n\r\n    // This useEffect fires off on application load and uses our action to fetch products\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber)) // We pass keyword in to our action so we can use this action to make this specific keyword\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <>\r\n                <Row>\r\n                    {products.map(product => (\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                            <Product product={product} />\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\r\n                </>\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    // Saves items in cart to local storage\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n    \r\n    // If there is a qty on the end of the url (when addToCart is clicked) this will get the qty\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {\r\n                    cartItems.length === 0 ? (<Message>Your cart is empty <Link to='/'>Go Back</Link></Message>)\r\n                    : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={2}>${item.price}</Col>\r\n                                        <Col md={2}>\r\n                                        <Form.Control \r\n                                                as='select' \r\n                                                value={item.qty} \r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))} \r\n                                            >\r\n                                                {/* [0,1,2,3,4] */}\r\n                                                {\r\n                                                    [...Array(item.countInStock).keys()].map(x => (\r\n                                                        <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                    ))\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <Button \r\n                                                type='button' \r\n                                                variant='light' \r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )\r\n                }\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                type='button' \r\n                                className='btn-block' \r\n                                disabled={cartItems.length === 0}\r\n                                 onClick={checkoutHandler}\r\n                            >\r\n                                Procceed to Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin) // Get information from our state\r\n    const { loading, error, userInfo } = userLogin // Pulling the specific info we need\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    // This useEffect states that if a user is already logged in the redirect them to our redirect page\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // DISPATCH LOGIN\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                        type='email' \r\n                        placeholder='Enter email' \r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password' \r\n                        placeholder='Enter password' \r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer?{' '} \r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister) // Get information from our state\r\n    const { loading, error, userInfo } = userRegister // Pulling the specific info we need\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    // This useEffect states that if a user is already logged in the redirect them to our redirect page\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // DISPATCH REGISTER\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control \r\n                        type='name' \r\n                        placeholder='Enter name' \r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                        type='email' \r\n                        placeholder='Enter email' \r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password' \r\n                        placeholder='Enter password' \r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password' \r\n                        placeholder='Confirm password' \r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Register</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account?{' '} \r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails) // Get information from our state\r\n    const { loading, error, user } = userDetails // Pulling the specific info we need\r\n\r\n    // Gets our userInfo to make sure we are logged in\r\n    const userLogin = useSelector(state => state.userLogin) \r\n    const { userInfo } = userLogin\r\n\r\n    // Gets the success message so we can display it when we update our account info\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile) \r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy) \r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    // This useEffect states that if a user is already logged in the redirect them to our redirect page\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if(!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders()) // Get and List the Users orders on their profile page\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            // DISPATCH UPDATE PROFILE\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control \r\n                            type='name' \r\n                            placeholder='Enter name' \r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                            type='email' \r\n                            placeholder='Enter email' \r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            type='password' \r\n                            placeholder='Enter password' \r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control \r\n                            type='password' \r\n                            placeholder='Confirm password' \r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message varaint='danger'>{errorOrders}</Message> :\r\n                (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}\r\n                                    </td>\r\n                                    <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL } from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {userLogin: { userInfo } } = getState() // Destructures so we can easily access our userInfo and token\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}` // Pass the token for authentication purposes\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config) // Second parameter users is what we want to update with\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {userLogin: { userInfo } } = getState() // Destructures so we can easily access our userInfo and token\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}` // Pass the token for authentication purposes\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config) // Second parameter users is what we want to update with\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {userLogin: { userInfo } } = getState() // Destructures so we can easily access our userInfo and token\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}` // Pass the token for authentication purposes\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config) // Second parameter users is what we want to update with\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {userLogin: { userInfo } } = getState() // Destructures so we can easily access our userInfo and token\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}` // Pass the token for authentication purposes\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config) // Second parameter users is what we want to update with\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {userLogin: { userInfo } } = getState() // Destructures so we can easily access our userInfo and token\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}` // Pass the token for authentication purposes\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config) // Second parameter users is what we want to update with\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {userLogin: { userInfo } } = getState() // Destructures so we can easily access our userInfo and token\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}` // Pass the token for authentication purposes\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders`, config) // Second parameter users is what we want to update with\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4}) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // DISPATCH saveShippingAddress\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment') // After form submit move to the next page of checkout\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control \r\n                        type='text' \r\n                        placeholder='Enter address' \r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control \r\n                        type='text' \r\n                        placeholder='Enter city' \r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control \r\n                        type='text' \r\n                        placeholder='Enter postal code' \r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control \r\n                        type='text' \r\n                        placeholder='Enter country' \r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if(!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // DISPATCH saveShippingAddress\r\n        dispatch(savePaymentMethod( paymentMethod ))\r\n        history.push('/placeorder') // After form submit move to the next page of checkout\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                \r\n                <Form.Group>\r\n                    <Form.Label as='legend' >Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check \r\n                            type='radio' \r\n                            label='PayPal or Credit Card' \r\n                            id='PayPal' \r\n                            name='paymentMethod' \r\n                            value='PayPal' \r\n                            checked \r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { Link } from 'react-router-dom'\r\nimport { createOrder} from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    // Function to add two decimals on the end of our calculations\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    // Calculate Prices\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = addDecimals(Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice))\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if(success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n    \r\n    const placeOrderHandler = () => {\r\n        // DISPATCH CREATE ORDER\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city} {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> :\r\n                            (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>Place Order</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Link } from 'react-router-dom'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants' // We bring this in directly so we can dispatch this and reset our state to avoid an infite loop\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSDKReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { success: successPay, loading: loadingPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { success: successDeliver, loading: loadingDeliver } = orderDeliver\r\n\r\n    // Calculates our Items and Shipping Price\r\n    if(!loading) {\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n    \r\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Makes sure user is logged in if not redirects them\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        // Dynamically adds the neccessary Paypal Script\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSDKReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if(!order || order._id !== orderId || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET }) // If this isn't here once you pay it will keep refreshing\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if(!order.isPaid) { // If order is not paid this will add the paypal script to the page\r\n            if(!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSDKReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, orderId, order, successPay, successDeliver, history, userInfo])\r\n\r\n    // Actually Order the order -> Updates in DB to Paid\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n    <>\r\n        <h1>Order {order._id}</h1>\r\n        <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong> {order.user.name}</p>\r\n                            <p><a href={`mailto:${order.user.email}`}><strong>Email: </strong>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city} {order.shippingAddress.postalCode}, {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered? <Message variant='success'>Delivered on {order.deliveredAt.substring(0, 10)}</Message> : <Message variant='danger'>Not Delivered</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? <Message variant='success'>Paid on {order.paidAt.substring(0, 10)}</Message> : <Message variant='danger'>Not Paid</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message>Order is empty</Message> :\r\n                            (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? ( <Loader /> ) : (\r\n                                        <PayPalButton \r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                        Mark As Delivered\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n    </>\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { users, loading, error} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete])\r\n    \r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure')) {\r\n        dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n            (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>{user.isAdmin ? \r\n                                    (<i className='fas fa-check' style={{color: 'green'}}></i>) \r\n                                    :\r\n                                    (<i className='fas fa-times' style={{color: 'red'}}></i>)}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button \r\n                                        variant='danger' \r\n                                        className='btn-sm' \r\n                                        onClick={() => {deleteHandler(user._id)}}\r\n                                    >\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userContants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id // Get user Id from URL\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails) // Get information from our state\r\n    const { loading, error, user } = userDetails // Pulling the specific info we need\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate) // Get information from our state\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate // Pulling the specific info we need\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) { // If successUpdate then we want to RESET the User update State and redirect to UserListScreen\r\n            dispatch({ type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if(!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [user, dispatch, userId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin })) // Update our user with this information passed in\r\n        console.log(isAdmin)\r\n    }\r\n\r\n    console.log(name)\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn-light my-3'>Go Back</Link>\r\n            <FormContainer>\r\n            <h1>Edit User</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control \r\n                            type='name' \r\n                            placeholder='Enter name' \r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                            type='email' \r\n                            placeholder='Enter email' \r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='isAdmin'>\r\n                        <Form.Check \r\n                            type='checkbox' \r\n                            label='Is Admin'\r\n                            checked={isAdmin}\r\n                            onChange={(e) => setIsAdmin(e.target.checked)}\r\n                        ></Form.Check>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            )}\r\n            \r\n            </FormContainer>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { products, loading, error, pages, page} = productList\r\n\r\n    // We want to get the success value from productDelete\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { success: successDelete, loading: loadingDelete, error: errorDelete} = productDelete\r\n\r\n    // We want to get the success value from productDelete\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { success: successCreate, loading: loadingCreate, error: errorCreate, product: createdProduct} = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if(!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if(successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber]) // Pass successDelete that way when it triggers it will run the effect thus getting the updated listProducts again\r\n    \r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure')) {\r\n        // DELETE PRODUCTS\r\n        dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        // CREATE PRODUCT\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n            (\r\n                <>\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products.map(product => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>${product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button \r\n                                        variant='danger' \r\n                                        className='btn-sm' \r\n                                        onClick={() => {deleteHandler(product._id)}}\r\n                                    >\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate page={page} pages={pages} isAdmin={true}/>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id // Get user Id from URL\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails) // Get information from our state\r\n    const { loading, error, product } = productDetails // Pulling the specific info we need\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate) \r\n    const { loading: updateLoading, error: updateError, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if(!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n    }, [product, dispatch, productId, history, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0] // We get access to this when we upload which is an array\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // UPDATE PRODUCT\r\n        dispatch(updateProduct({ _id: productId, name, price, image, brand, category, countInStock, description}))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn-light my-3'>Go Back</Link>\r\n            <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {updateLoading && <Loader />}\r\n            {updateError && <Message variant='danger'>{updateError}</Message>}\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control \r\n                            type='name' \r\n                            placeholder='Enter name' \r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='price'>\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control \r\n                            type='number' \r\n                            placeholder='Enter price' \r\n                            value={price}\r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='image'>\r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Control \r\n                            type='text' \r\n                            placeholder='Enter image url' \r\n                            value={image}\r\n                            onChange={(e) => setImage(e.target.value)}\r\n                        ></Form.Control>\r\n                        <Form.File \r\n                            id='image-file' \r\n                            label='Choose File' \r\n                            custom \r\n                            onChange={uploadFileHandler}\r\n                        ></Form.File>\r\n                        {uploading && <Loader />}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='brand'>\r\n                        <Form.Label>Brand</Form.Label>\r\n                        <Form.Control \r\n                            type='text' \r\n                            placeholder='Enter Brand' \r\n                            value={brand}\r\n                            onChange={(e) => setBrand(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='countInStock'>\r\n                        <Form.Label>Count In Stock</Form.Label>\r\n                        <Form.Control \r\n                            type='number' \r\n                            placeholder='Enter countInStock' \r\n                            value={countInStock}\r\n                            onChange={(e) => setCountInStock(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='category'>\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control \r\n                            type='text' \r\n                            placeholder='Enter Category' \r\n                            value={category}\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='description'>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control \r\n                            type='text' \r\n                            placeholder='Enter Description' \r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            )}\r\n            \r\n            </FormContainer>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { orders, loading, error} = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, history, userInfo]) // Pass successDelete that way when it triggers it will run the effect thus getting the updated listProducts again\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n            (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL PRICE</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>{order.isPaid \r\n                                    ? order.paidAt.substring(0, 10)\r\n                                    : <i className='fas fa-times' style={{ color: 'red'}}></i>}\r\n                                </td>\r\n                                <td>{order.isDelivered \r\n                                    ? order.deliveredAt.substring(0, 10)\r\n                                    : <i className='fas fa-times' style={{ color: 'red'}}></i>}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            Order Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport { Container } from 'react-bootstrap'\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport ProductScreen from './screens/ProductScreen'\nimport HomeScreen from './screens/HomeScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/productlist' component={ProductListScreen} exact />\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path=\"/search/:keyword\" component={HomeScreen}  exact/>\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\n          <Route path=\"/search/:keyword/page/:pageNumber\" component={HomeScreen} exact />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}